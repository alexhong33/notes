
# 多继承, 方法相同时, 调用顺序

class Base(object):
	def test(self):
		print("----Base")


class A(Base):
	def test(self):
		print("----A")


class B(Base):
	def test(self):
		print("----B")


class C(A, B):
	pass


c = C()
c.test()

print(C.__mro__)


输出 >>>

----A
(<class '__main__.C'>, <class '__main__.A'>, <class '__main__.B'>, <class '__main__.Base'>, <class 'object'>)


当方法名相同时, 调用顺序如下
C>A>B>object

